---
kind: Service
apiVersion: v1
metadata:
  name: vernemq-test
  labels:
    app.kubernetes.io/instance: vernemq-test
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.40.100
spec:
  ports:
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: mqtt
    - name: metrics
      protocol: TCP
      port: 8888
      targetPort: api
  selector:
    app.kubernetes.io/instance: vernemq-test
  type: LoadBalancer
---
kind: Service
apiVersion: v1
metadata:
  name: vernemq-test-headless
  labels:
    app.kubernetes.io/instance: vernemq-test
spec:
  ports:
    - name: empd
      protocol: TCP
      port: 4369
      targetPort: 4369
    - name: metrics
      protocol: TCP
      port: 8888
      targetPort: api
  selector:
    app.kubernetes.io/instance: vernemq-test
  clusterIP: None
  type: ClusterIP
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: vernemq-test
  labels:
    app.kubernetes.io/instance: vernemq-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: vernemq-test
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vernemq-test
    spec:
      volumes:
        - name: logs
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: vernemq-config
          secret:
            secretName: vernemq-conf

      # securityContext:
      #    fsGroup: 10000
      containers:
        - name: vernemq
          image: digieye/digieye-vernemq:1.12.6.2-alpine-rc-test1
          command: ["sh", "-c", "sleep infinity"]
          securityContext:
            runAsUser: 0
          ports:
            - name: mqtt
              containerPort: 1883
              protocol: TCP
            - name: mqtts
              containerPort: 8883
              protocol: TCP
            - name: epmd
              containerPort: 4369
              protocol: TCP
            - name: vmq
              containerPort: 44053
              protocol: TCP
            - name: ws
              containerPort: 8080
              protocol: TCP
            - name: wss
              containerPort: 8443
              protocol: TCP
            - name: api
              containerPort: 8888
              protocol: TCP
            - containerPort: 9100
              protocol: TCP
            - containerPort: 9101
              protocol: TCP
            - containerPort: 9102
              protocol: TCP
            - containerPort: 9103
              protocol: TCP
            - containerPort: 9104
              protocol: TCP
            - containerPort: 9105
              protocol: TCP
            - containerPort: 9106
              protocol: TCP
            - containerPort: 9107
              protocol: TCP
            - containerPort: 9108
              protocol: TCP
            - containerPort: 9109
              protocol: TCP
          envFrom:
            - configMapRef:
                name: vernemq-prod-env
            - secretRef:
                name: vernemq-postgresql-credentials
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources: {}
          volumeMounts:
            - name: logs
              mountPath: /vernemq/log
            - name: data
              mountPath: /vernemq/data

          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: api
          #     scheme: HTTP
          #   initialDelaySeconds: 90
          #   timeoutSeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: api
          #     scheme: HTTP
          #   initialDelaySeconds: 90
          #   timeoutSeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      serviceAccountName: vernemq-prod
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - vernemq-test
                topologyKey: kubernetes.io/hostname
  serviceName: vernemq-test-headless
